#Sourceï¼šETC(Electronic Toll Collection) data

#load packages

install.packages(shiny)
install.packages(ggplot2)
install.packages(ggthemes)
install.packages(shinydashboard)
library(ggplot2)
library(ggthemes)
library(shiny)
library(shinydashboard)

#load file and preceding operation

setwd("C:/Users/User/Desktop/Eric/data/2016-2019")

Y1619<-do.call(rbind,lapply(list.files(path="C:/Users/User/Desktop/Eric/data/2016-2019",pattern="*.csv"),read.table, header=FALSE, sep=","))

names(Y1619)<-c("date time", "o", "NS", "VehicleType", "flow")
n1<-seq(100,2400,by=100)
n2<-seq(0030,2330,by=100)

t<-c()
for (i in 1:48) {
  if(i%%2==0){
    t[i]=n1[i/2]
  }else{
    t[i]=n2[ceiling(i/2)]
  }
}
t2<-c(0000,rep(t[-48],each=6),rep(t[48],each=5))
time<-rep(t2,8)

Y1619_1_TP_31<-cbind(Y1619_TP_31,time)

ETCdata<-aggregate(flow~date+time,Y1619_1_TP_31,mean)
ETCdata$date<-as.character(ETCdata$date)

#shiny

a1<-subset(ETCdata,date=="2016-02-08")
b1<-subset(ETCdata,date=="2017-01-28")
c1<-subset(ETCdata,date=="2018-02-16")
d1<-subset(ETCdata,date=="2019-02-05")
a2<-subset(ETCdata,date=="2016-02-09")
b2<-subset(ETCdata,date=="2017-01-29")
c2<-subset(ETCdata,date=="2018-02-17")
d2<-subset(ETCdata,date=="2019-02-06")

ui <- dashboardPage(skin = "green",
  dashboardHeader(title = "ETC data of the first and second day of the Chinese New Year",titleWidth = 600),
  dashboardSidebar(),
  dashboardBody(
    fluidRow(
      box(title = "Select the date", status = "primary",solidHeader = TRUE,collapsible = TRUE,
          selectInput("date", "Date:",choices = unique(ETCdata$date)))
          ),
    mainPanel(
      
      tabsetPanel(type = "tabs",
                  tabPanel("Plot", icon("image"),plotOutput("ETCPlot")),
                  tabPanel("Summary", icon("pen-fancy"),verbatimTextOutput("summary")),
                  tabPanel("Table", icon("table"),tableOutput("table"))
      )
      
    )
  )
)


server <- function(input, output) {
  
  output$ETCPlot <- renderPlot({
    if(input$date=="2016-02-08"){
      ggplot(a1,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#00CED1")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2017-01-28"){
      ggplot(b1,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#2E8B57")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2018-02-16"){
      ggplot(c1,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#FFB90F")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2019-02-05"){
      ggplot(d1,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#EE6363")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2016-02-09"){
      ggplot(a2,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#FF1493")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2017-01-29"){
      ggplot(b2,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#008B8B")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else if(input$date=="2018-02-17"){
      ggplot(c2,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#90EE90")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }else{
      ggplot(d2,aes(x=time,y=flow,group = 1))+geom_line(linetype = "solid",size=1.5,color="#008B45")+labs(title = paste("Traffic flow in",input$date),x="time",y="flow")+theme_stata()+theme(axis.title.x = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5))+theme(axis.title.y = element_text(size = 15, face = "bold", vjust = 0.5, hjust = 0.5, angle = 360))+ theme(axis.text.y = element_text(angle = 360))+ theme(plot.title = element_text(size=15,face = "bold"))
    }
  })
  output$summary<-renderPrint({
    if(input$date=="2016-02-08"){
      summary(a1$flow)
    }else if(input$date=="2017-01-28"){
      summary(b1$flow)
    }else if(input$date=="2018-02-16"){
      summary(c1$flow)
    }else if(input$date=="2019-02-05"){
      summary(d1$flow)
    }else if(input$date=="2016-02-09"){
      summary(a2$flow)
    }else if(input$date=="2017-01-29"){
      summary(b2$flow)
    }else if(input$date=="2018-02-17"){
      summary(c2$flow)
    }else if(input$date=="2019-02-06"){
      summary(d2$flow)
    }
  })
  output$table <- renderTable({
    if(input$date=="2016-02-08"){
      a1[-1]
    }else if(input$date=="2017-01-28"){
      b1[-1]
    }else if(input$date=="2018-02-16"){
      c1[-1]
    }else if(input$date=="2019-02-05"){
      d1[-1]
    }else if(input$date=="2016-02-09"){
      a2[-1]
    }else if(input$date=="2017-01-29"){
      b2[-1]
    }else if(input$date=="2018-02-17"){
      c2[-1]
    }else if(input$date=="2019-02-06"){
      d2[-1]
    }
  })
}

shinyApp(ui, server)
